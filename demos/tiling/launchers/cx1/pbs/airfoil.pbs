#!/bin/bash

#PBS -l walltime=10:00:00
#PBS -l select=1:ncpus=20:mem=16gb:icib=true
#PBS -q pqcdt

FIREDRAKE=$FIREDRAKE_DIR
TILING=$FIREDRAKE/demos/tiling
EXECUTABLE=$TILING/airfoil.py
MESHES=$WORK/meshes/airfoil


echo ------------------------------------------------------
echo -n 'Job is running on node '; cat $PBS_NODEFILE
cat /proc/cpuinfo | grep "model name" | uniq
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------
echo PBS: PYTHONPATH = $PYTHONPATH
echo ------------------------------------------------------
echo PBS: SLOPE_BACKEND = $SLOPE_BACKEND
echo ------------------------------------------------------


# The pure OMP version needs affinity explicitly set
export KMP_AFFINITY=granularity=fine,compact,1,0

# Only OMP backend
export SLOPE_BACKEND=OMP
export OMP_NUM_THREADS=20

# Clean the remote cache, then dry runs on tiny mesh to generate kernels
$FIREDRAKE/scripts/firedrake-clean
for nu in 0 1 2 4
do
    for p in "chunk" "metis"
    do
        for m in $MESHES"/small_grid.h5"
        do
            for ts in 50
            do
                python $EXECUTABLE --mesh-file $m --tile-size $ts --part-mode $p --num-unroll $nu > /dev/null
            done
        done
    done
done


# Run the tests
for nu in 0 1 2 4
do
    for p in "chunk" "metis"
    do
        for m in $MESHES"/new_grid.h5"
        do
            for ts in 1000 2000 3000 5000 10000
            do
                # Only OMP backend
                export OMP_NUM_THREADS=1
                python $EXECUTABLE --mesh-file $m --tile-size $ts --part-mode $p --num-unroll $nu
                export OMP_NUM_THREADS=4
                python $EXECUTABLE --mesh-file $m --tile-size $ts --part-mode $p --num-unroll $nu
                export OMP_NUM_THREADS=8
                python $EXECUTABLE --mesh-file $m --tile-size $ts --part-mode $p --num-unroll $nu
                export OMP_NUM_THREADS=12
                python $EXECUTABLE --mesh-file $m --tile-size $ts --part-mode $p --num-unroll $nu
                export OMP_NUM_THREADS=16
                python $EXECUTABLE --mesh-file $m --tile-size $ts --part-mode $p --num-unroll $nu
                export OMP_NUM_THREADS=20
                python $EXECUTABLE --mesh-file $m --tile-size $ts --part-mode $p --num-unroll $nu
            done
        done
    done
done
